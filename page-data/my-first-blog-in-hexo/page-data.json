{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/my-first-blog-in-hexo","result":{"data":{"post":{"__typename":"MdxPost","slug":"/my-first-blog-in-hexo","title":"My first blog in Hexo","date":"29.09.2018","tags":[{"name":"blog","slug":"blog"},{"name":"how-to","slug":"how-to"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"My first blog in Hexo\",\n  \"date\": \"2018-09-29T00:00:00.000Z\",\n  \"tags\": [\"blog\", \"how-to\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"How to setup your first blog\"), mdx(\"p\", null, \"In this post I'll discuss the process i went through to setup my first blog in hexo. Also I'll suggest some helpful stuff to automate compilation of css and template changes without having to exit and run hexo serve everytime.\"), mdx(\"p\", null, \"Necessary links to get started:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nodejs based static site generator: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hexo.io/\"\n  }), \"https://hexo.io/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hexo Theme: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Ben02/hexo-theme-Anatole\"\n  }), \"https://github.com/Ben02/hexo-theme-Anatole\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NVM Windows: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/coreybutler/nvm-windows\"\n  }), \"https://github.com/coreybutler/nvm-windows\"))), mdx(\"h3\", null, \"Initial Setup\"), mdx(\"p\", null, \"NVM is the preferred method to install nodejs. Although nvm is not available for Windows there is an alternative called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/coreybutler/nvm-windows\"\n  }), \"nvm-windows\"), \" which can be used to install mulitple versions of nodejs.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After installing nvm install the latest LTS node version using the cmd\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"nvm list #fetch the available versions\\nnvm install <version> # install the required version\\nnpm install -g hexo-cli #installs hexo\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Note: -g so that we can install the cli globally and access it in the shell\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new folder which will be your blog directory and initialize hexo by issuing the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hexo init\"), \" cmd in that directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This will create a blog with default theme located in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"themes\"), \" directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To run the current generated blog run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hexo serve\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"open your browser and goto \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localhost:4000\"), \" to check if everything runs fine.\")), mdx(\"p\", null, \"Now that the required base setup is done we can now install the theme. Every theme has its own installation guidelines so checkout your themes respective readme/wiki sections.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installation is straight forward, get the stable version of the theme from the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Ben02/hexo-theme-Anatole/releases\"\n  }), \"release section\"), \" of the github repository.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This theme also requires a npm package \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hexo-render-pug\"), \". Install this to ensure html will be generated.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm install hexo-render-pug\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract to the themes folder and rename it to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"anatole\"), \" or any other name you prefer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Currently the default theme is set as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"landscape\"), \" which can be changed in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_config.yml\"), \" in the root directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_config.yml\"), \" and set the theme entry to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"anatole\"), \".\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"theme: anatole\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Now when you run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hexo serve\"), \" the new theme will be loaded. Refresh if already open.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Changes to the existing theme\")), mdx(\"p\", null, \"Minor changes have been made to the theme as follow\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changed the side bar and content widths to 30% and 70% respectively.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added margin to the title in the sidebar.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"removed the margin for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"p\"), \" tag.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"removed the language files as the default language and set the language to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"en\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"anatole/layout/layout.pug\"), \" else it will be set to zh-CN.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modified the navbar layout file for the theme to reset the order and links \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"anatole/layout/partial/nav.pug\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Font color and size changes to the code tags.\")), mdx(\"h3\", null, \"Setup to speed up the development\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexo serve\"), \" doesnt pick up the changes to files made during development. In order to get the latest changes to the blog one has to quit the current running instance of hexo serve and run it again. This can be annoying but there is a way to avoid this.\"), mdx(\"p\", null, \"Note: This doesnt merge the changes made to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_config.yml\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Install node-sass to compile scss to css\")), mdx(\"p\", null, \"First install node-sass to compile the changes from scss and generate a css file. All the changes to the css has to be made in styles.scss file.\\nTo compile the scss file to css run.\\nTo automate this for file changes we can add watch option -w.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# install\\nnpm install -g node-sass\\n\\n# compile\\nnode-sass ./style.scss ./style.css\\n\\n#compile with watch\\nnode-sass -w ./style.scss ./style.css\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Serve files without having to restart \\u201Chexo serve\\u201D\")), mdx(\"p\", null, \"Now to serve the files without using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexo serve\"), \". This method requires first to generate the blog files using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexo generate -w\"), \", here option -w watches the file changes, which pushes generated blog files to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" folder in the root directory and lastly serving this folder via http server.\\nUse the npm package \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http-server\"), \" to serve the generated blog.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"#install\\nnpm install -g http-server\\n\\n#Serve generated blog\\nhttp-server ./public\\n\")), mdx(\"p\", null, \"So a total of three instances of shell has to be run for each of the above commands to make this work.\"), mdx(\"h2\", null, \"What to do next\"), mdx(\"p\", null, \"The layout is created using template engine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pug\"), \". To make any changes to the layout modify the themes layout files.\\nNow that the basic setup is done we can continue writing blog posts using the Markup Language.\\nCheckout the documentation for Hexo to customize the theme furthur to your liking.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"How to setup your first blog In this post I'll discuss the process i went through to setup my first blog in hexo. Also I'll suggest some…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/my-first-blog-in-hexo","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574","3325520806"]}